import { ITableColumn } from '@/shared';
import { NormalizedCargo } from './types';

export const CARGO_COLUMNS: ITableColumn<NormalizedCargo>[] = [
  {
    key: 'numb_cargo',
    label: '#',
    sortable: true,
    width: 'max-content',
    minWidth: 10,
    render: (row) => row.numb_cargo,
  },
  {
    key: 'date_pay',
    label: 'Дата оплаты',
    sortable: true,
    width: 'auto',
    minWidth: 120,
    render: (row) => (row.date_pay ? new Date(row.date_pay).toLocaleDateString() : ''),
  },
  {
    key: 'date_delivery',
    label: 'План прихода',
    sortable: true,
    width: 'auto',
    minWidth: 120,
    render: (row) => (row.date_delivery ? new Date(row.date_delivery).toLocaleDateString() : ''),
  },
  {
    key: 'date_delivery_fact',
    label: 'Приход факт',
    sortable: true,
    width: 'auto',
    minWidth: 120,
    render: (row) =>
      row.date_delivery_fact ? new Date(row.date_delivery_fact).toLocaleDateString() : '',
  },
  {
    key: 'client_name',
    label: 'Клиент',
    sortable: true,
    width: 'auto',
    minWidth: 200,
    render: (row) => row.client_name,
  },
  {
    key: 'name',
    label: 'Груз',
    sortable: true,
    width: 'auto',
    minWidth: 200,
    render: (row) => row.name,
  },
  {
    key: 'number_cargo',
    label: 'Номер груза',
    sortable: true,
    width: 'auto',
    minWidth: 120,
    render: (row) => row.number_cargo,
  },
  {
    key: 'rate',
    label: 'Курс',
    sortable: true,
    width: 'auto',
    minWidth: 100,
    render: (row) => row.rate,
  },
  {
    key: 'price',
    label: 'Покупка',
    sortable: true,
    width: 'auto',
    minWidth: 120,
    render: (row) => row.price,
  },
  {
    key: 'price_client',
    label: 'Продажа',
    sortable: true,
    width: 'auto',
    minWidth: 120,
    render: (row) => row.price_client,
  },
  {
    key: 'delta',
    label: 'Дельта',
    sortable: true,
    width: 'auto',
    minWidth: 120,
    render: (row) => Number(row?.price_client) - Number(row?.price),
  },
  {
    key: 'carrier_name',
    label: 'Перевозчик',
    sortable: true,
    width: 'auto',
    minWidth: 200,
    render: (row) => row.carrier_name,
  },
  {
    key: 'pay_target_name',
    label: 'Цель оплаты',
    sortable: true,
    width: 'auto',
    minWidth: 150,
    render: (row) => row.pay_target_name,
  },
];
